# Semantics #


## List execution ##

The simplest Metachatr programs are just lists that get evaluated as s-expressions.

    ["+", 2, 3]
    > 5


## Blocks ##

A Metachatr program consists of a number of nested blocks. Each block has two parts, a name binding part and a list part. When a block is evaluated the list part is evaluated as an s-expression with names looked up in the name binding part (and then the parent block).

The list part is at the location in the object where the empty key is found.

For example, evaluating the following block gives the value 3:

    {"": ["foo"], "foo": 3}
    > 3

Atoms on their own result in that atom. A string does not cause a name look up.

    3
    > 3

This returns the string, not the identifier bound to the name.

    "Hello"
    > "Hello"

To evaluate the name then a s-expression must be used.

    ["Hello"]
    ! Name 'Hello' not bound to an expression

Arguments can also be passed by name by setting up the same sort of expression

    {"": ["$", "${h} ${w}"], "h": "Hello", "w": "World!"}
    > "Hello World!"
